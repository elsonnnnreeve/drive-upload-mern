{"version":3,"sources":["App.js","index.js"],"names":["App","listOfUsers","setListOfUsers","useState","name","setName","age","setAge","gender","setGender","fileName","setFileName","message","setMessage","buttonColor","setButtonColor","file","setFile","previewLink","setPreviewLink","fileInputRef","useRef","useEffect","Axios","get","then","response","data","React","createElement","className","concat","onSubmit","async","event","preventDefault","formData","FormData","append","url","post","headers","id","current","value","setTimeout","err","console","log","type","placeholder","onChange","target","files","length","ref","multiple","hidden","htmlFor","style","backgroundColor","href","rel","class","data-bs-toggle","data-bs-target","map","user","index","key","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f7bccd54.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport './App.css';\nimport Axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\n\n\nconst App = () => {\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Select Files\");\n  const [message, setMessage] = useState(\"\");\n  const [buttonColor, setButtonColor] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [previewLink, setPreviewLink] = useState(\"\");\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getUsers\").then((response) => {\n      setListOfUsers(response.data);\n    });\n  }, []);\n\n  const handleFileChange = (event) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setFile(file);\n      setFileName(file.name);\n    } else {\n      setFileName('Select Files');\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setButtonColor('red');\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('age', age);\n    formData.append('gender', gender);\n    formData.append('file', file);\n\n    try {\n      const response = await Axios.post('http://localhost:3001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      const url = response.data.id;\n      setPreviewLink(url);\n      setListOfUsers([\n        ...listOfUsers,\n        {\n          name,\n          age,\n          gender,\n          id: url,\n        },\n      ]);\n\n      setMessage('Successfully uploaded to drive and saved in backend');\n      setButtonColor('green');\n      setName(\"\");\n      setAge(\"\");\n      setGender(\"\");\n      setFileName(\"Select Files\");\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = null;\n      }\n\n      setTimeout(() => {\n        setMessage('');\n        setButtonColor('');\n      }, 5000);\n    } catch (err) {\n      if (err.message === \"Error uploading file to Drive: Insufficient storage quota on Google Drive. Unable to upload file.\") {\n        setMessage(\"File size exceeds storage limit. Please upload a smaller file.\")\n        console.log(\"File size exceeds storage limit. Please upload a smaller file.\", err.response);\n      } else {\n        setMessage('Not uploaded to drive or backend');\n        console.log(\"Couldn't upload to drive or backend\", err);\n      }\n      setTimeout(() => {\n        setMessage('');\n        setButtonColor('');\n      }, 5000);\n    }\n  };\n\n  return (\n    <div className=\"body\">\n      {message && (\n        <div className=\"position-absolute top-80 start-50 translate-middle-x\">\n          <div className={`alert ${buttonColor === \"green\" ? \"alert-success\" : \"alert-danger\"} text-center`}>\n            {message}\n          </div>\n        </div>\n      )}\n      <br /><br />\n\n      <div className=\"container-sm p-3 my-5 mx-auto border text-center row w-25 rounded custom-layout\">\n        <h2 className=\"h2\">Enter Student details:</h2><br /><br/><br/><br/>\n        <form onSubmit={handleSubmit}>\n          <input className=\"col form-control form-control-sm\" type=\"text\" placeholder=\"Name..\" value={name} onChange={(event) => setName(event.target.value)} /><br /><br />\n          <input className=\"col form-control form-control-sm\" type=\"number\" placeholder=\"Age..\" value={age} onChange={(event) => setAge(event.target.value)} /><br /><br />\n          <select className=\"col form-select form-select-sm\" value={gender} onChange={(event) => setGender(event.target.value)}>\n            <option value=\"\">Select Gender..</option>\n            <option value=\"m\">Male</option>\n            <option value=\"f\">Female</option>\n            <option value=\"o\">Other</option>\n          </select><br /><br />\n          <input className=\"col text-center form-control form-control-sm\" type=\"file\" id=\"fileInput\" onChange={handleFileChange} ref={fileInputRef} multiple /><br />\n          <label className=\"col\" hidden htmlFor=\"fileInput\">{fileName}</label>\n          <span className={`alert ${buttonColor === \"red\" ? \" spinner-grow text-primary spinner-grow-sm\" : \"\"} `}></span><br/>\n          <button className=\"btn btn-outline-primary btn-sm\" type=\"submit\" id=\"myButton\" style={{ backgroundColor: buttonColor }}>\n            \n            Submit</button>\n        \n        </form>\n      </div>\n      {/* <div className={`alert ${buttonColor === \"green\" ? \"alert-success\" : \"alert-danger\"} text-center`}>*/ }\n\n      <span className=\"text-center\">\n        {previewLink && <p><a href={previewLink} className=\"btn btn-info btn-sm\" target=\"_blank\" rel=\"noopener noreferrer\">Preview of the recently uploaded file</a></p>}\n        <br /><br />\n      </span>\n      \n      <div className=\"d-flex justify-content-center mt-4 \">\n      <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"collapse\" data-bs-target=\"#demo\">STUDENTS</button>\n      <span id=\"demo\" className=\"collapse\">\n        <table className=\"table table-responsive-sm table-bordered text-center table-sm table-hover table-striped table-container \">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Name</th>\n              <th>Age</th>\n              <th>Gender</th>\n              <th>URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            {listOfUsers.map((user, index) => (\n              <tr key={index}>\n                <td>{user.name}</td>\n                <td>{user.age}</td>\n                <td>{user.gender}</td>\n                <td><a href={user.id} rel=\"noopener noreferrer\" target=\"_blank\">{user.id}</a></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        </span>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}